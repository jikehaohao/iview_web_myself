{"remainingRequest":"/data/iview-admin/node_modules/babel-loader/lib/index.js!/data/iview-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/data/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/data/iview-admin/src/components/drag-list/drag-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/data/iview-admin/src/components/drag-list/drag-list.vue","mtime":1551598437115},{"path":"/data/iview-admin/.babelrc","mtime":1551598437104},{"path":"/data/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/iview-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/data/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/iview-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport draggable from 'vuedraggable';\nexport default {\n  name: 'DragList',\n  components: {\n    draggable: draggable\n  },\n  props: {\n    list1: {\n      type: Array,\n      required: true\n    },\n    list2: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    dropConClass: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      options: {\n        group: 'drag_list'\n      }\n    };\n  },\n  methods: {\n    handleListChange: function handleListChange(value, type) {\n      if (type === 'left') this.$emit('update:list1', value);else this.$emit('update:list2', value);\n    },\n    handleEnd: function handleEnd(event, type) {\n      var srcClassName = (event.srcElement || event.target).classList[0];\n      var targetClassName = event.to.classList[0];\n      var src = '';\n      var target = '';\n\n      if (srcClassName === targetClassName) {\n        if (type === 'left') {\n          src = 'left';\n          target = 'left';\n        } else {\n          src = 'right';\n          target = 'right';\n        }\n      } else {\n        if (type === 'left') {\n          src = 'left';\n          target = 'right';\n        } else {\n          src = 'right';\n          target = 'left';\n        }\n      }\n\n      this.$emit('on-change', {\n        src: src,\n        target: target,\n        oldIndex: event.oldIndex,\n        newIndex: event.newIndex\n      });\n    }\n  }\n};",null]}